<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.education">


<resultMap id="educationResult" type="educationVO">
 <!-- DB에 있는 이름 그대로 -->
		<result property="edu_num" column="edu_num" />
		<result property="eq_name" column="eq_name" />
		<result property="edu_title" column="edu_title" />
		<result property="cate_name" column="cate_name" />
 		<result property="edu_content" column="edu_content" />
		<result property="edu_pub_date" column="edu_pub_date" />
		<result property="edu_writer" column="edu_writer" /> 
		<result property="edu_thuming" column="edu_thuming" /> 
		
	
</resultMap>
  
<!--   <select id="selectEducationList"  resultMap="educationResult" >
        <![CDATA[
select edu_num, cate_name, eq_name, edu_title, edu_content, edu_pub_date, edu_writer, edu_thuming  from education ORDER BY edu_num DESC
        ]]>
    </select> -->
    
    
    
<!--  페이징 해보자 -->
 	<select id="selectEducationList" resultMap="educationResult">

         SELECT edu_num, cate_name, eq_name, edu_title, edu_content, edu_pub_date, edu_writer, edu_thuming FROM ( 
		        SELECT edu_num, cate_name, eq_name, edu_title, edu_content, edu_pub_date, edu_writer, edu_thuming,
		               ROW_NUMBER() OVER(ORDER BY edu_num DESC) AS RNUM
		        	   FROM education where 1=1
		        	    <include refid="search"></include>
		        	   ) mp
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY edu_num DESC 	
 
	</select>
	 <select id="listeduCount" resultType="int">
   	
   			select 
   			count(edu_num)
   			from education where 1=1
   			<include refid="search"></include>
   			and edu_num > 0
   </select>   
<!--  페이징 해보자 -->


  
<!--  교육 번호 조회  -->
   <select id="selectEducationByCode" parameterType="educationVO" resultType="com.dnb.pro.education.vo.educationVO">
    <![CDATA[
	SELECT
	count(*) as edu_num
	FROM
	education
            	]]>
    </select> 
    
<!--  교육 번호 조회 다름  -->
   <select id="educationdetail" parameterType="educationVO" resultType="com.dnb.pro.education.vo.educationVO">
    <![CDATA[
    select * from education 
    where edu_num = #{no}
            	]]>
    </select>
    
   <!-- 새글 등록 -->
   <insert id="insertNeweducation" parameterType="java.util.Map">
        <![CDATA[
           insert into education(edu_num, cate_name, eq_name, edu_title, edu_content, edu_writer, edu_thuming)  
           values (EDU_NUM_SEQ.NEXTVAL,#{cate_name},#{eq_name},#{edu_title},#{edu_content},#{edu_writer},#{edu_thuming})
        ]]>
   </insert>
    <select id="selectNeweducationNO" resultType="int">
        <![CDATA[
           select max(edu_num) + 1 from education
           ]]>
   </select>
   
   
      <!-- 글쓰기 창 에 게시판이름 자동으로 뿌리기 -->
   <select id="selecteducationName" resultMap="educationResult">
        <![CDATA[
           select *  
         from education 
         where edu_num=#{edu_num}
        ]]>
   </select>    
   
        <!-- 선택 글 수정 -->
     <update id="updateeducation" parameterType="java.util.Map">
        <![CDATA[
           update education set cate_name=#{cate_name}, edu_title=#{edu_title}, eq_name=#{eq_name}, edu_content=#{edu_content}  
           where edu_num=#{edu_num}
           ]]>    
     </update>
     
     <update id="updateeducationNewimg" parameterType="java.util.Map">
        <![CDATA[
           update education set cate_name=#{cate_name}, edu_title=#{edu_title}, eq_name=#{eq_name}, edu_content=#{edu_content}, edu_thuming=#{edu_thuming}  
           where edu_num=#{edu_num}
           ]]>
   </update>
   
   <!-- 선택 글 삭제 -->
   <delete id="deleteeducation" >
      <![CDATA[
           delete from education 
           where edu_num=#{edu_num}
           ]]>   
   </delete>

<!--  페이징 추가 --> 	
<!-- 교육 카테고리별 보기 -->
	<!-- <select id="selectCateEduList" parameterType="educationVO" resultType="com.dnb.pro.education.vo.educationVO" resultMap="educationResult" >
   
    select edu_num, cate_name, eq_name, edu_title, edu_content, edu_pub_date, edu_writer, edu_thuming 
    from (SELECT edu_num, cate_name, eq_name, edu_title, edu_content, edu_pub_date, edu_writer, edu_thuming,
		               ROW_NUMBER() OVER(ORDER BY edu_num DESC) AS RNUM
		        	   FROM education where 1=1 and cate_name = #{cate_name}
		        	    <include refid="search"></include>
		        	   ) mp
    where RNUM BETWEEN #{rowStart} AND #{rowEnd} and cate_name = #{cate_name} ORDER BY edu_num DESC
            	
    </select>
 
	 <select id="listCateEduCount" resultType="int">
   			select 
   			count(edu_num)
   			from education where 1=1
   			and cate_name = #{cate_name}
   			<include refid="search"></include>
   			and edu_num > 0
   </select>    -->
   
 <!-- 카테고리별 페이징 끝 -->
       
<!-- 교육 카테고리 받아오기 -->
 	<select id="eduCateNameList" parameterType = "educationVO" resultType="com.dnb.pro.education.vo.educationVO">
 		<![CDATA[
 			select cate_name from category
 			]]>
 	</select>
 	
 	<!-- 교육 분류명 조회 -->
 	<select id="selectByCateName" parameterType="educationVO" resultType="com.dnb.pro.education.vo.educationVO">
    	<![CDATA[
		SELECT * from education where cate_name = #{cate_name}  ORDER BY edu_num DESC
        ]]>
    </select> 
    
    <!-- 검색 include -->
	<sql id="search">
		
		<if test="searchType != null">
			<if test="searchType == 'c'.toString()">AND cate_name LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 't'.toString()">AND edu_title LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'n'.toString()">AND eq_name LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'ctn'.toString()">AND (edu_title LIKE '%' || #{keyword} || '%') or 
														(eq_name LIKE '%' || #{keyword} || '%') or
														(cate_name LIKE '%' || #{keyword} || '%')</if>
		</if>
		<if test="searchType == null">
			
		</if>
	</sql> 
</mapper>


	

